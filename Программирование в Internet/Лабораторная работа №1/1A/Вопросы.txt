1). Что такое веб-приложение?

Клиент-серверное приложение, применяющее для обмена данными протокол HTTP.

--------------------------------------------------------------------------------------------
2). Что такое http, на каком уровне работает?

http - протокол предачи данных.
Прикладной.

--------------------------------------------------------------------------------------------
3). Свойства http?

- версии HTTP/1.1 - действующий, HTTP/2 - черновой;
- два типа обонентов: клиент и сервер;
- два типа сообщений: request и response;
- от клиента к серверу - request;
- от сервера к клиенту - response;
- на один request всегда один response, иначе ошибка;
- одному response всегда один request, иначе ошибка;
- TCP-порты: 80, 443;
- для адресации используется URI или URN;
- поддерживается W3C, описан в нескольких RFC;

--------------------------------------------------------------------------------------------
4). Структура запроса и ответа?

Request:
- метод;
- URI;
- версия протокола (HTTP/1.1);
- заголовки;
- параметры;
- расширение;

Response:
- версия протокола;
- код состояиния;
- пояснение к коду состояния;
- заголовки;
- расширение;

--------------------------------------------------------------------------------------------
5). Какие есть типы заголовков http?

- General  - общие заголовки, используются в запросах и ответах
- Request  - используются только в запросах
- Response - используются только в ответах
- Entity   - для сущности в ответах и запросах //(не понял, если честно)
 
--------------------------------------------------------------------------------------------
6). Какие есть методы запроса и чем они отличаются?

- OPTIONS
- GET
- HEAD
- POST
- PUT
- DELETE
- TRACE
- CONNECT

--------------------------------------------------------------------------------------------
7). Коды (1xx, 2xx, 3xx, 4xx, 5xx)

1xx - информационные сообщения
2xx - успешный ответ
3xx - переадресация
4xx - ошибка клиента
5xx - ошибка сервера

--------------------------------------------------------------------------------------------
8). Идемпотентность http?

Запрос изменят состояние сервера?

--------------------------------------------------------------------------------------------
9). Что такое http-обработчик?

http-обработчки - обрабатывает запрос и отправляет ответ

--------------------------------------------------------------------------------------------
10). Каким образом запросы маршрутизируются к http-обработчику?

//Допустим что-то наплетем про маршрутизацию запросов.

--------------------------------------------------------------------------------------------
11). Может ли отсутствовать тело в структуре запроса/ответа?

Может

--------------------------------------------------------------------------------------------
12). Какой интерфейс реализует http-обработчик(какие в нем методы и что они делают?)

реализуют IHttpHandler

ProcessRequest - обработка запроса, формирование ответа
IsReusable     - можно использовать экземпляр для повторного запроса (если нет, то экземпляр
пересоздается)  //(что за экзепляр? - не понял)

--------------------------------------------------------------------------------------------
13). Типы приложений ASP .Net

- http Handler
- Web Form
- MVC
- MVC Web API
- ASMX-сервисы
- WCF-сервисы
--------------------------------------------------------------------------------------------
14). Жизненный цикл http-обработчика



--------------------------------------------------------------------------------------------
15). Чем оличатся http от https и как работает htts?

//Примерно что-то наплету

--------------------------------------------------------------------------------------------
16). Еще вопрос про URI/URN/URL



--------------------------------------------------------------------------------------------